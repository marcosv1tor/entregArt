{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\markn\\\\Documents\\\\VENDERGAS\\\\FRONT\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Verificar token ao carregar a aplicação\n  useEffect(() => {\n    const checkAuth = async () => {\n      const savedToken = localStorage.getItem('token');\n      if (savedToken) {\n        try {\n          const userData = await authService.verifyToken();\n          setUser(userData.user);\n          setToken(savedToken);\n        } catch (error) {\n          console.error('Token inválido:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, senha) => {\n    try {\n      const response = await authService.login(email, senha);\n      const {\n        user: userData,\n        token: userToken\n      } = response;\n      setUser(userData);\n      setToken(userToken);\n      localStorage.setItem('token', userToken);\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Erro no login:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erro ao fazer login'\n      };\n    }\n  };\n  const register = async (nome, email, senha) => {\n    try {\n      const response = await authService.register(nome, email, senha);\n      const {\n        user: userData,\n        token: userToken\n      } = response;\n      setUser(userData);\n      setToken(userToken);\n      localStorage.setItem('token', userToken);\n      return {\n        success: true,\n        user: userData\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Erro no registro:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Erro ao criar conta'\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Erro no logout:', error);\n    } finally {\n      setUser(null);\n      setToken(null);\n      localStorage.removeItem('token');\n    }\n  };\n  const updateUser = userData => {\n    setUser(userData);\n  };\n  const isAuthenticated = () => {\n    return !!token && !!user;\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"/pbUqy0QsBvMqKPYubk3+KKKH8I=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","checkAuth","savedToken","userData","verifyToken","error","console","removeItem","login","email","senha","response","userToken","setItem","success","_error$response","_error$response$data","message","data","register","nome","_error$response2","_error$response2$data","logout","updateUser","isAuthenticated","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/markn/Documents/VENDERGAS/FRONT/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Verificar token ao carregar a aplicação\n  useEffect(() => {\n    const checkAuth = async () => {\n      const savedToken = localStorage.getItem('token');\n      if (savedToken) {\n        try {\n          const userData = await authService.verifyToken();\n          setUser(userData.user);\n          setToken(savedToken);\n        } catch (error) {\n          console.error('Token inválido:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (email, senha) => {\n    try {\n      const response = await authService.login(email, senha);\n      const { user: userData, token: userToken } = response;\n      \n      setUser(userData);\n      setToken(userToken);\n      localStorage.setItem('token', userToken);\n      \n      return { success: true, user: userData };\n    } catch (error) {\n      console.error('Erro no login:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Erro ao fazer login' \n      };\n    }\n  };\n\n  const register = async (nome, email, senha) => {\n    try {\n      const response = await authService.register(nome, email, senha);\n      const { user: userData, token: userToken } = response;\n      \n      setUser(userData);\n      setToken(userToken);\n      localStorage.setItem('token', userToken);\n      \n      return { success: true, user: userData };\n    } catch (error) {\n      console.error('Erro no registro:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Erro ao criar conta' \n      };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Erro no logout:', error);\n    } finally {\n      setUser(null);\n      setToken(null);\n      localStorage.removeItem('token');\n    }\n  };\n\n  const updateUser = (userData) => {\n    setUser(userData);\n  };\n\n  const isAuthenticated = () => {\n    return !!token && !!user;\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    isAuthenticated\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}