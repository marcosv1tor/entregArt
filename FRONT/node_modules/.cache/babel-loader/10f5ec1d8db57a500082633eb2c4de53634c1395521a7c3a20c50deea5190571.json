{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\n\n// Configuração base da API\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Criar instância do axios\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Interceptor para adicionar token de autenticação\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptor para tratar respostas e erros\napi.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  var _error$response, _error$response2, _error$response2$data, _error$response3;\n  // Tratar erros de autenticação\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n    toast.error('Sessão expirada. Faça login novamente.');\n    return Promise.reject(error);\n  }\n\n  // Tratar outros erros HTTP\n  const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Erro interno do servidor';\n\n  // Não mostrar toast para erros de validação (400) pois são tratados nos componentes\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) !== 400) {\n    toast.error(message);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","toast","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","_error$response","_error$response2","_error$response2$data","_error$response3","status","removeItem","window","location","href","message"],"sources":["C:/Users/markn/Documents/VENDERGAS/FRONT/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\n// Configuração base da API\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Criar instância do axios\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Interceptor para adicionar token de autenticação\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Interceptor para tratar respostas e erros\napi.interceptors.response.use(\n  (response) => {\n    return response.data;\n  },\n  (error) => {\n    // Tratar erros de autenticação\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n      toast.error('Sessão expirada. Faça login novamente.');\n      return Promise.reject(error);\n    }\n\n    // Tratar outros erros HTTP\n    const message = error.response?.data?.message || 'Erro interno do servidor';\n    \n    // Não mostrar toast para erros de validação (400) pois são tratados nos componentes\n    if (error.response?.status !== 400) {\n      toast.error(message);\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAEjF;AACA,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,GAAG,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ,OAAOA,QAAQ,CAACC,IAAI;AACtB,CAAC,EACAJ,KAAK,IAAK;EAAA,IAAAK,eAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA;EACT;EACA,IAAI,EAAAH,eAAA,GAAAL,KAAK,CAACG,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBI,MAAM,MAAK,GAAG,EAAE;IAClCZ,YAAY,CAACa,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IAC/B/B,KAAK,CAACkB,KAAK,CAAC,wCAAwC,CAAC;IACrD,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;EAC9B;;EAEA;EACA,MAAMc,OAAO,GAAG,EAAAR,gBAAA,GAAAN,KAAK,CAACG,QAAQ,cAAAG,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBF,IAAI,cAAAG,qBAAA,uBAApBA,qBAAA,CAAsBO,OAAO,KAAI,0BAA0B;;EAE3E;EACA,IAAI,EAAAN,gBAAA,GAAAR,KAAK,CAACG,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC3B,KAAK,CAACkB,KAAK,CAACc,OAAO,CAAC;EACtB;EAEA,OAAOb,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}